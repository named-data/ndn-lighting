ndn-lighting 

git@github.com:remap/ndn-lighting.git

This is a lighting control application based on Named Data Networking (NDN).

This is the third major iteration, result of initial development and two installations (PARC demo and TV1) May-June 2011.

Features:

	web: upload image, email image, resize, analyze (histogram), pattern generation, sequencer
	ndn: control lights w/ verified signed interests

To Do:
	multiple app-key generation & exchange
	auto-config of kinet protocol IP

Overview:

lights/
	Python code for lighting Supply/Port/Fixture discovery.
ndn/
	ndn stack for lighting control
web/
	public image upload, email, and analysis
doc/ 
	system diagram (also at http://goo.gl/jtzzW)
	ndn lighting control payload format
	application naming convention

config:
	
	/web/uag/config.py
	/ndn/lights/config.py

Getting Started:

	background: ensure /web is working somewhere. This ensures mongodb is populated with image analysis.
	Note we can assume Kinet & ccndc are auto-started on gumstik (via /etc/rc5.d/)
	(if you don't think they are, just power cycle the gstix)
	
	Then, play sequencer:
		go to /web host (lighting@borges at install) cd into ~/ndn-lighting/scripts/
		and type:
		./startSequencer

	Of course this assumes everything is set up correctly! (it was as of writing ;)

	make sure all params in above config files are accurate for your app instance.

Notes:
	gmail account for submission curation:
		u/p: uclaremap@gmail.com, l!ghting2011
	
	gumstik and borges lighting acct:
		u/p: lighting, l!ghting2011

	to stop sequencer, ctrl-c
	to run sequencer with terminal closed / after logging out, use screen

TV1:
	As of writing, the public URLS for this are:

	http://borges.metwi.ucla.edu/lighting/status.html u/p: TV1
	http://bigriver.remap.ucla.edu/lighting/devices (gumstix report on boot)
	http://bigriver.remap.ucla.edu/lighting/app/upload
	ssh://remap.is-very-good.org is TV1 gumstix (via router port 22 fwd & dyndns)
