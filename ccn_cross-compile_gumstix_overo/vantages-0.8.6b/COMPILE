Quick Start:
=================================================================================

This is the quickstart section.  It would be useful to read the Detailed 
Dependencies section, especially for the treatise on the GPGME installation
complications (i.e. ensure that GPGME uses gpg1 and not gpg2).

Note: if there are any problems, please consult the more detailed instructions
below.

On Linux with dpkg (Ubuntu, Debian, etc):
--------------------------------------------------------------------------------
sudo apt-get install coreutils \
  libsqlite3-dev gnupg libgpg-error-dev \
  libgpgme11-dev libexpat1-dev \
  libpcap0.8-dev libcurl4-openssl-dev \
  openssl libtool libterm-readkey-perl

On OS X:
--------------------------------------------------------------------------------
On OS X use Darwin Ports with Xcode ( http://www.darwinports.com/ ).

sudo port install libtool sqlite3 \
  gnupg gpgme libgpg-error expat \
  curl-ca-bundle openssl p5-term-readkey

On FreeBSD:
--------------------------------------------------------------------------------
# Remeber to choose GPG 1.x and _NOT_ GPG 2.x
cd /usr/ports/security/gpgme && make install clean
cd /usr/ports/databases/sqlite3 && make install clean
cd /usr/ports/textproc/expat2 && make install clean
cd /usr/ports/ftp/curl && make install clean
cd /usr/ports/devel/libtool22 && make install clean
cd /usr/ports/devel/p5-Term-ReadKey && make install clean

Detailed Dependencies:
=================================================================================

It is strongly recommended (for your own sanity), that you use some
form of depedency manager to install and maintain these.  On a Debian/
Ubuntu variant of a Linux distro, use the dpkg name with apt-get
On OS X use Darwin Ports with Xcode ( http://www.darwinports.com/ ).

Note: The GPG dependencies can seem somewhat non-trivial to install.  Following
the table below is a very terse step-by-step example for getting them all installed.

Software       URL for source          dpkg            Notes
--------------------------------------------------------------------------------
g++                                    coreutils
               http://gcc.gnu.org/releases.html

SQLite3                                libsqlite3-dev
               http://www.sqlite.org/download.html

GnuPG                                  gnupg           GnuPG version 1.x (NOT 2.x)
               http://www.gnupg.org/download

Libgpg-error                           libgpg-error-dev
               http://www.gnupg.org/download

gpgme                                  libgpgme11-dev  NOTE: configure gpgme to use GnuPG 1.x and not 2.x
               http://www.gnupg.org/download           GnuPG 2.x will not work properly as it will use
                                                       pinentry _each_ time you start vantaged instead of
                                                       using a passphrase callback

Expat                                  libexpat1-dev
               http://sourceforge.net/projects/expat/

libpcap                                libpcap0.8-dev
               http://www.tcpdump.org/mirrors.html

cURL                                   libcurl4-openssl-dev
               http://curl.haxx.se/download.html

OpenSSL                                openssl
               http://www.openssl.org/source/

libtool                                libtool
               http://ftp.gnu.org/gnu/libtool/

Term::ReadKey                          libterm-readkey-perl
               http://search.cpan.org/CPAN/authors/id/K/KJ/KJALB/TermReadKey-2.14.tar.gz


Getting GPG deps installed:
 ---------------------------------------------------------------------
1 - Download the following tarballs from the GnuPG download page:
http://www.gnupg.org/download (also listed above).
  1 - Libgpg-error
  2 - GnuPG v1.x (NOT v2.x)
  3 - GnuPG Made Easy (GPGME)

2 - Untar each download and build them in the order suggested above.  
  Note: GPGME may ask you if you prefer to use GnuPG v1.x or v2.x,
  and it is important to specify 1.x (as mentioned above).

Vantages compilation steps:
=================================================================================

./configure
make 
sudo make install

Set-up:
=================================================================================

---------------------------------------------------------------------
--                                                                 --
-- If you have not installed Vantages before:                      --
-- FIRST:                                                          --
-- Copy ''$(datarootdir)/vantages/vantaged.conf.sample'' into the  --
-- /etc/ directory, configure it as you like (note: type           --
-- ''man vantaged.conf'' to see the possible variables and their   --
-- meanings                                                        --
--                                                                 --
-- SECOND:                                                         --
-- Choose a user to run the daemon as (such as ''vantages''), and  --
-- create that user if it does not already exist.                  --
--                                                                 --
-- THIRD:                                                          --
-- You must now run ''vant-setup'' as root.                        --
--   First, vant-setup will prompt you for the user name that the  --
--   daemon will run under.                                        --
--   Second, initialize the database with option 1.                --
--   Third, if you do not already have a GPG key, you may          --
--         optionally generate one using option 2.                 --
--   Fourth, configure your local key with option 3.               --
--   Fifth, if you would like your vantaged to startup             --
--   automatically (i.e. without user prompts) and you have a      --
--   passphrase on your GPG key, be sure to insert this            --
--   passphrase into the database with option 4.                   --
--                                                                 --
-- FOURTH:                                                         --
-- Place the startup script in ''scripts/vantaged.sh'' into your   --
-- system's rc system if you would like vantaged started on system --
-- startup.                                                        --
--                                                                 --
---------------------------------------------------------------------
