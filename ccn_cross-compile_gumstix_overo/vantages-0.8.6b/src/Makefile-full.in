 #
 # Copyright (c) 2008,2009, University of California, Los Angeles and 
 # Colorado State University All rights reserved.
 # 
 # Redistribution and use in source and binary forms, with or without
 # modification, are permitted provided that the following conditions are met:
 # 
 #     * Redistributions of source code must retain the above copyright notice,
 #       this list of conditions and the following disclaimer.
 #     * Redistributions in binary form must reproduce the above copyright
 #       notice, this list of conditions and the following disclaimer in the
 #       documentation and/or other materials provided with the distribution.
 #     * Neither the name of NLnetLabs nor the names of its
 #       contributors may be used to endorse or promote products derived from this
 #       software without specific prior written permission.
 # 
 # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 # AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 # IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 # ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 # LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 # CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 # SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 # INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 # CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 # ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 # POSSIBILITY OF SUCH DAMAGE.
 # 


CC =    @CC@
CXX =    @CXX@
DEFINES = -g -Wall -Werror @DEFS@
CFLAGS =  @CFLAGS@ @CPPFLAGS@ $(DEFINES)
CXXFLAGS =  @CXXFLAGS@ 
CPPFLAGS = -DDEBUG -D_POSIX_THREADS -D_REENTRANT -I../dns -I../shttpd-1.42/src -I/usr/local/include -I/opt/local/include -I/usr/local/include/gpgme @CPPFLAGS@ 
LDFLAGS = -L../lib -L../dns/lib -L/usr/local/lib -L/opt/local/lib @LDFLAGS@ 
LIBS = -lshttpd -lvdns @LIBS@

libtool  = @libtool@
LIBTOOL = $(libtool) --tag=CXX
LINK_LIB  = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LDFLAGS) 
prefix = @prefix@
exec_prefix = @exec_prefix@
libdir = @libdir@

OBJS = raw_rev_dao.o proc_rev_dao.o raw_data_dao.o proc_data_dao.o \
       ps_dao.o dao_factory.o ps_crypt_fact.o ps_crypt_mgr.o ps_app.o \
       gpgme_crypt_mgr.o ps_queue.o ps_strtok.o ps_policy_dao.o \
       dnskey_set_dao.o ps_poller.o ps_config.o scraper_dao.o \
       perl_scraper.o dnskey_proc_dao.o http_listener.o \
       proc_query_dao.o friend_dao.o friend_rule.o ps_url_parser.o \
       ps_logger.o ps_local_key_dao.o ps_poll_task.o \
       http_query.o dnskey_consist_dao.o bind_ta_gen.o dnskey_poll_task.o \
       dnskey_scraper_dao.o http_list_ctx.o ps_task.o dnskey_app.o \
       ps_thrd.o ps_poll_thrd.o ps_thrd_pool.o ps_mutex.o ps_mutex_hdlr.o \
       dnskey_web_task.o dnskey_http_ctx.o dnskey_admin_ctx.o \
       dnskey_pcap_loader.o dnskey_mon_dao.o \
       $(DSYNC_OBJS) \
       @LIBOBJS@
DSYNC_OBJS = dsync_app.o dsync_ns_dao.o dsync_zone_dao.o dsync_rrset_dao.o \
             dsync_init_task.o dsync_first_task.o dsync_second_task.o \
             dsync_third_task.o dsync_dnskey_abstraction_task.o dsync_ctx.o \


TEST_DRIVERS = test_ps_thrd_pool test_ps_logger test_gpgme_crypt_mgr \
               test_dnskey_poll_task test_ps_strtok test_ps_policy_dao \
               test_dns_tsig test_http_query

PROG = vantaged dnsfunnel dnskey-grab 

#CXXFLAGS += $(CFLAGS)

.cc.o:
	$(CXX) $(CXXFLAGS) $(DEFINES) $(CPPFLAGS) -c $<

.c.o:
	$(CC) $(CFLAGS) $(DEFINES) $(CPPFLAGS) -c $<

all: $(PROG)

test: all $(TEST_DRIVERS)

$(PROG): $(OBJS) $(DSYNC_OBJS)
	$(LINK_LIB) -o $@ $@.cc $(OBJS) $(LIBS)
	$(CXX) $(CXXFLAGS) $(DEFINES) $(CPPFLAGS) $(LDFLAGS) -o ../bin/$@ $@.cc $(OBJS) $(LIBS)
#	$(LINK_LIB) -o ../bin/$@ $@.cc $(OBJS) $(LIBS) -rpath $(libdir) 

$(TEST_DRIVERS): $(OBJS)
	$(LINK_LIB) -o $@ $@.cc $(OBJS) $(LIBS)
#	$(CXX) $(CXXFLAGS) $(DEFINES) $(CPPFLAGS) $(LDFLAGS) -o ../bin/$@ $@.cc $(OBJS) $(LIBS)

reflector: $(DNS_OBJS)
	$(CXX) $(CXXFLAGS) $(DEFINES) $(CPPFLAGS) $(LDFLAGS) -o ../bin/$@ $@.cc $(DNS_OBJS) -lpthread -lpcap -lresolv

clean:
	rm -f $(PROG) $(OBJS) $(DSYNC_OBJS)
